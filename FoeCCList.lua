--
---- Ok, so I've added FoeCC type.  This must be like a standard CCtype, but with a duration bit on it.
---- Basically I want to be able to apply it when the CC is active and mark it as Active/Inactive.
---- Might just go with setting this to be a standard CCType and just enhancing that to allow it to be active/inactive!!!
--
---- ****************************************************
---- Class FoeCCList
---- ****************************************************
--FoeCCList=nil
--FoeCCList={};
--FoeCCList.__index = FoeCCList -- failed table lookups on the instances should fallback to the class table, to get methods
--
---- Intialise the List
--function FoeCCList.new()
--  -- the new instance
--  local self = setmetatable({}, FoeCCList)
--  self.CCTypeReverseLookupTable = {}
--  return self;
--end
--
---- Build up a reverse lookup table so wek can have an index for the CCName
--function FoeCCList:Add(objCC)
--	print("ADDING CC: ");
--  table.insert(self, objCC)
--  self.CCTypeReverseLookupTable[tostring(objCC.CCType)] = table.getn(self)
--  --print("Inserted CCTYPE "..objCC.CCType);
--  self:ListCCs();
--end
--
---- Reverse lookup the CCType.  Return found FoeCC
--function FoeCCList:LookupSpellId(spellId)
--  local foundId = self.CCTypeReverseLookupTable[tostring(strCCType)];
--  if foundId then
--    return self[foundId];
--  else
--    return nil;
--  end
--end
--
--function FoeCCList:ListCCs()
--  local strJoin = "";
--  local strResult = "";
--  for i,CCtype in ipairs(self) do
--    strResult = strResult..strJoin.."("..tostring(CCtype.CCType)..") expires in "..tostring(CCtype.CCExpires).."sec\n  "
--    strJoin = ",";
--    print("1CCs "..strResult)
--  end  
--  print("CCs "..strResult)
--  return strResult;
--end
--
--
--
--
---- ****************************************************
---- Class FoeCCList
---- ****************************************************
--